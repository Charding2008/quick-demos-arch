---
#------------------------------------------------------------------------------
# Start tasks
#------------------------------------------------------------------------------

# If not using terraform, you could use these next two blocks to install TS.
#
# Set Var for curent TS file name

  - name: RETRIEVE TS VERSION FROM FILE
    find:
      paths: ../files/
      patterns: "f5-telemetry*.rpm" 
    register: tsrpm
    delegate_to: localhost


  - name: DEBUG FILE NAME
    debug:
      msg: "{{ tsrpm }}"

  - name: DEBUG FILE NAME
    debug:
      msg: "{{ tsrpm.files }}"
  - name: DEBUG FILE NAME
    debug:
      msg: "{{ tsrpm.files[0] }}"

  - name: DEBUG FILE NAME
    debug:
      msg: "{{ tsrpm.files[0].path }}"
      
  - name: INSTALL TS
    bigip_lx_package:
      provider:
        server: "{{ inventory_hostname }}"
        user: "{{ bigip_user }}"
        password: "{{ aws_secret }}"
        ssh_keyfile: "{{ ssh_key_file_path }}"
        validate_certs: no
        server_port: 443
      package: "{{ tsrpm.files[0].path }}"
    delegate_to: localhost


  - name: WAIT FOR TS API (204 or 200 WHEN DECLARATION EXISTS)
    uri:
      url: "https://{{ inventory_hostname }}/mgmt/shared/telemetry/declare"
      method: GET
      user: "{{ bigip_user }}"
      password: "{{ aws_secret }}"
      force_basic_auth: yes
      status_code: 
        - 200
        - 204
      validate_certs: no
    retries: 30
    delay: 5
    register: ts_result
    until: ('status' in ts_result and (ts_result.status == 200 or ts_result.status == 204 ))
    changed_when: false


  - name: TS REST CALL TO BIG-IP USING JINJA2 TEMPLATE
    uri:
      url: "https://{{ inventory_hostname }}/mgmt/shared/telemetry/declare"
      method: POST
      force_basic_auth: yes
      user: "{{ bigip_user }}"
      password: "{{ aws_secret }}"
      body: "{{ lookup('template', '../templates/ts-declaration.j2', split_lines=False) }}"
      body_format: json
      status_code: 200,202
      timeout: 120
      validate_certs: no
    register: deploy_ts
    until: deploy_ts is not failed
    retries: 5
    delay: 30


#------------------------------------------------------------------------------
# End tasks
#------------------------------------------------------------------------------
...