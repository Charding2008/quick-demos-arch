---

  - name: CREATE VPC
    ec2_vpc_net:
      name: "{{ vpc_name }}"
      cidr_block: "{{ vpc_cidr }}"
      region: "{{ aws_region }}"
      state: present
      tags:
        automated: "{{ automation_tool }}"
        stack: "{{ stack_name }}"
        UK-SE: "{{ uk_se_name }}"
    register: create_vpc


  - name: "SET FACT: VPC ID"
    set_fact:
      vpc_id: "{{ create_vpc.vpc.id }}"
  

  - name: CREATE VPC SUBNETS
    ec2_vpc_subnet:
      vpc_id: "{{ vpc_id }}"
      cidr: "{{ item.cidr }}"
      az: "{{ item.az }}"
      tags:
        name: "{{ item.name }}"
        automated: "{{ automation_tool }}"
        stack: "{{ stack_name }}"
        UK-SE: "{{ uk_se_name }}"
      state: present
    with_items: "{{ vpc_subnets }}"
    register: create_vpc_subnets


  - name: "COLLECT SUBNET FACTS"
    ec2_vpc_subnet_facts:
      filters:
        vpc-id: "{{ vpc_id }}"
    register: vpc_subnet_facts


  - name: "SET FACT: VPC SUBNET IDS"
    set_fact:
      vpc_subnet_ids: "{{ vpc_subnet_ids | default({}) | combine({ (item.tags.name | default('default')): item.id }) }}"
    loop: "{{ vpc_subnet_facts.subnets }}"


  - name: CREATE RDS SUBNET GROUP
    rds_subnet_group:
      state: present
      name: "{{ uk_se_name }}-rds-sg"
      description: "{{ uk_se_name }}-rds-subnet-for-nginx"
      subnets:
        - "{{ vpc_subnet_ids.rds_a }}"
        - "{{ vpc_subnet_ids.rds_b }}"


  - name: CREATE INTERNET GATEWAY
    ec2_vpc_igw:
      vpc_id: "{{ vpc_id }}"
      state: present
      tags:
        automated: "{{ automation_tool }}"
        stack: "{{ stack_name }}"
        UK-SE: "{{ uk_se_name }}"
    register: create_gateway


  - name: "SET FACT: GATEWAY ID"
    set_fact:
      vpc_gateway_id: "{{ create_gateway.gateway_id }}"
 

  # public route table that routes through the internet gateway -- attach it to our three public subnets
  - name: CREATE ROUTE TABLE FOR PUBLIC SUBNETS
    ec2_vpc_route_table:
      vpc_id: "{{ vpc_id }}"
      state: present
      tags:
        automated: "{{ automation_tool }}"
        stack: "{{ stack_name }}"
        UK-SE: "{{ uk_se_name }}"
      subnets:
        - "{{ vpc_subnet_ids.mgmt_a }}"
      routes:
        - dest: 0.0.0.0/0
          gateway_id: "{{ vpc_gateway_id }}"


  - name: CREATE SECURITY GROUP FOR PUBLIC SUBNET
    ec2_group:
      name: "nginx-sg"
      description: "security group to controll ingress to nginx instances"
      vpc_id: "{{ vpc_id }}"
      region: "{{ aws_region }}"
      rules:
        - proto: tcp
          from_port: 80
          to_port: 80
          cidr_ip: 0.0.0.0/0
        - proto: tcp
          from_port: 22
          to_port: 22
          cidr_ip: 0.0.0.0/0
        - proto: tcp
          from_port: 443
          to_port: 443
          cidr_ip: 0.0.0.0/0
        - proto: tcp
          from_port: 5432
          to_port: 5432
          cidr_ip: 10.1.0.0/16
      rules_egress:
        - proto: all
          from_port: 0
          to_port: 65535
          cidr_ip: 0.0.0.0/0
    register: nginx_sg

...